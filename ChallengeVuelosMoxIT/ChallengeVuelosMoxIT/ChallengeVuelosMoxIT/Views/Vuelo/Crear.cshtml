
@{
    ViewBag.Title = "Crear nuevo vuelo";
}

@model Modelo.Vuelo


    <div class="row d-flex justify-content-around">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header pt-3">
                    <h5 class="text-primary text-uppercase"><i class="fa fa-plus-circle mr-2"></i>Crear nuevo vuelo</h5>
                </div>
                <div class="card-body">
                    <form class="needs-validation" novalidate action="/Vuelo/Crear" method="post">
                        <input type="hidden" value="@Model.Id" name="id" />
                        <div class="row mb-3">
                            <div class="col-md-12">
                                @Html.LabelFor(v => v.Numero)
                                @Html.EditorFor(v => v.Numero, new { htmlAttributes = new { @class = "form-control", @type = "text", required = "required", @value = Model.Numero } })
                                @Html.ValidationMessageFor(v => v.Numero, "", new { @class = "error" })
                                <div class="invalid-feedback">
                                    *Campo obligatorio.
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12">
                                @Html.LabelFor(v => v.LineaAerea)
                                @Html.EditorFor(v => v.LineaAerea, new { htmlAttributes = new { @class = "form-control", @type = "text", required = "required", @value = Model.LineaAerea } })
                                @Html.ValidationMessageFor(v => v.LineaAerea, "", new { @class = "error" })
                                <div class="invalid-feedback">
                                    *Campo obligatorio.
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-5">
                                @Html.LabelFor(v => v.HorarioLlegada)
                                @Html.EditorFor(v => v.HorarioLlegada, new { htmlAttributes = new { @class = "form-control", @type = "time", required = "required", @value = Model.HorarioLlegada }})
                                @Html.ValidationMessageFor(v => v.HorarioLlegada, "", new { @class = "error" })
                                <div class="invalid-feedback">
                                    *Campo obligatorio.
                                </div>
                            </div>
                            <div class="col-md-6 my-auto ml-2">
                                @Html.CheckBoxFor(v => v.Demorado, new { htmlAttributes = new { @class = "form-control", @value = Model.Demorado } })
                                @Html.LabelFor(v => v.Demorado)
                            </div>
                        </div>
                        <div class="card-footer bg-transparent mt-4">
                            <button type="submit" class="btn btn-primary pull-right d-flex"><i class="fa fa-check mr-2 py-1"></i>Guardar vuelo</button>
                            <a class="btn btn-outline-secondary d-inline-flex pull-right  mr-2" href="@Url.Action("Listar","Vuelo")"> <i class="fa fa-chevron-left mr-2 py-1"></i>Cancelar</a>

                        </div>
                    </form>
                </div>
            </div>
            <br />
        </div>
    </div>


        <script>

            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();
        </script>
